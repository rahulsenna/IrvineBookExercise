Microsoft (R) Macro Assembler (x64) Version 14.36.32534.0   07/22/23 00:27:04
4_6_2_Sum_Array_64_Bit.asm				     Page 1 - 1


				;		Sum Array in 64bit

				ExitProcess		PROTO

 00000000			.DATA
 00000000				myArray		QWORD	1,2,3,4,5,6,7,8,9
	   0000000000000001
	   0000000000000002
	   0000000000000003
	   0000000000000004
	   0000000000000005
	   0000000000000006
	   0000000000000007
	   0000000000000008
	   0000000000000009
 00000048				SumOfArray	QWORD	?
	   0000000000000000

 00000000			.CODE
 00000000			main		PROC
 00000000  48/ BE			mov		rsi, OFFSET myArray
	   0000000000000000 R
 0000000A  48/ C7 C1			mov		rcx, LENGTHOF myArray
	   00000009
 00000011  48/ 33 C0			xor		rax,rax
 00000014			L1:
 00000014  48/ 03 06			add		rax,[rsi]
 00000017  48/ 83 C6 08			add		rsi,TYPE myArray
 0000001B  E2 F7			loop	L1
 0000001D  48/ 89 05			mov		SumOfArray,rax
	   00000048 R

				; --- Partial register operand effects in Add/Sub 64bit reg

					;	16bit and 8bit operand AX/AL--------------------------
 00000024  48/ C7 C0			mov		rax,0FFFFh				; RAX = 000000000000FFFF 
	   0000FFFF
 0000002B  66| BB 0001			mov		bx,1					
 0000002F  66| 03 C3			add		ax,bx					; RAX = 0000000000000000

 00000032  48/ C7 C0			mov		rax,0FFFFh				; RAX = 000000000000FFFF
	   0000FFFF
 00000039  66| 83 C0 01			add		ax,1					; RAX = 0000000000000000

					;	32bit operand EAX--------------------------------------
 0000003D  48/ B8			mov		rax,0FFFFFFFFh			; RAX = 00000000FFFFFFFF
	   00000000FFFFFFFF
 00000047  83 C0 01			add		eax,1					; RAX = 0000000000000000

 0000004A  48/ C7 C0			mov		rax,0					; RAX = 0000000000000000
	   00000000
 00000051  83 E8 01			sub		eax,1					; RAX = 00000000FFFFFFFF

 00000054  48/ C7 C1			mov		rcx,0DFFFh
	   0000DFFF
 0000005B  66| BB 0003			mov		bx,3
 0000005F  66| 03 CB			add		cx,bx

				; --- Partial register operand effects in Add/Sub 64bit reg

				; --- Partial register operand effects in MOV 64bit reg
				;	mov constant 8/16/32bit upperbytes will clear to 0
				;	mov 32bit memory operand upperbytes will clear to 0
				;	mov 16/8bit memory operand won't affect upperbytes of 64bit operand

				;		************  Summary  ********
				;		Add/Sub with [AL/AH/AX/EAX]  won't affect higher bytes of [RAX]
				;		MOV with [AL/AH/AX/EAX] will always clear higher bytes of [RAX] to 0 except
				;		when done with memory operands(not constants) of 16/8bit to [AX/AL] 

 00000062  48/ B8			mov		rax,0ffffffffffffffffh
	   FFFFFFFFFFFFFFFF
 0000006C  48/ C7 C0			mov		rax,0ffh
	   000000FF


				;	Exit Procedure
 00000073  48/ C7 C1			mov		rcx,0
	   00000000
 0000007A  E8 00000000 E		call	ExitProcess
 0000007F			main		ENDP

				END
Microsoft (R) Macro Assembler (x64) Version 14.36.32534.0   07/22/23 00:27:04
4_6_2_Sum_Array_64_Bit.asm				     Symbols 2 - 1




Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P 	 00000000 Length= 00000000 External
main . . . . . . . . . . . . . .	P 	 00000000 _TEXT	Length= 0000007F Public
  L1 . . . . . . . . . . . . . .	L 	 00000014 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

SumOfArray . . . . . . . . . . .	QWord	 00000048 _DATA	
myArray  . . . . . . . . . . . .	QWord	 00000000 _DATA	

	   0 Warnings
	   0 Errors
